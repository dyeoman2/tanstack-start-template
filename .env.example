# Environment Variables
# Copy this file to .env.local and fill in your values
# Run: pnpm run setup (recommended) or fill in manually

# ==========================================
# REQUIRED SECRETS (Generated by setup script)
# ==========================================

# Used to encrypt sensitive fields before database storage
DB_ENCRYPTION_KEY=

# Signs JWTs for authentication
BETTER_AUTH_SECRET=

# Base URL for Better Auth
BETTER_AUTH_URL=http://localhost:3000

# ==========================================
# REQUIRED DEFAULTS
# ==========================================

# Set development environment
NODE_ENV=development

# Set business name
APP_NAME="Tanstack Start Template"

# ==========================================
# STORAGE (S3-Compatible: MinIO for dev, AWS S3 for prod)
# ==========================================

# Local development defaults (MinIO). Override as needed per environment.
S3_ENDPOINT=http://localhost:9000
S3_REGION=us-west-1
S3_ACCESS_KEY_ID=minioadmin
S3_SECRET_ACCESS_KEY=minioadmin
S3_BUCKET_NAME=tanstack-start-template-documents
S3_FORCE_PATH_STYLE=true
S3_PUBLIC_URL=http://localhost:9000

# Production (AWS S3) example
# S3_ENDPOINT=
# S3_REGION=us-west-1
# S3_ACCESS_KEY_ID=your-aws-access-key-id
# S3_SECRET_ACCESS_KEY=your-aws-secret-access-key
# S3_BUCKET_NAME=tanstack-start-template-documents-prod
# S3_FORCE_PATH_STYLE=false
# S3_PUBLIC_URL=https://tanstack-start-template-documents-prod.s3.amazonaws.com

# ==========================================
# OPTIONAL INTEGRATIONS
# ==========================================

# Email notifications (optional - get from https://resend.com)
RESEND_API_KEY=
RESEND_EMAIL_SENDER=

# ==========================================
# DATABASE (Configure for Local Development)
# ==========================================

# Option 1: Local PostgreSQL with Homebrew (Recommended)
# Install PostgreSQL: brew install postgresql && brew services start postgresql && createdb tanstack_start_starter_dev
DATABASE_URL=postgresql://localhost:5432/tanstack_start_starter_dev

# Option 2: Neon PostgreSQL with database branching
# Create branch: neonctl branches create --project-id YOUR_PROJECT_ID --name local
# NETLIFY_DATABASE_URL=postgresql://neondb_owner:your_password@ep-your-endpoint.neon.tech/neondb?sslmode=require

# For production: Netlify will automatically set NETLIFY_DATABASE_URL when deploying
